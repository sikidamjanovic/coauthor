{"version":3,"sources":["Components/Posts/Prompt.js","Components/Layout/Feed.js","Components/Layout/Sidebar.js","Components/Layout/Home.js","Store/Actions/postActions.js","Components/Posts/NewPostForm.js","Components/Posts/NewPostModal.js","Components/Layout/Nav.js","App.js","serviceWorker.js","Store/Reducers/authReducer.js","Store/Reducers/postReducer.js","Store/Reducers/rootReducer.js","Config/fbConfig.js","index.js"],"names":["Prompt","state","Meta","Card","actions","type","key","avatar","src","title","this","props","description","content","Component","Feed","posts","map","post","i","id","getPrompts","Sidebar","SubMenu","Menu","onClick","handleClick","style","width","height","defaultSelectedKeys","defaultOpenKeys","mode","ItemGroup","Item","Home","console","log","xs","md","sm","offset","connect","createPost","dispatch","getState","getFirebase","firestore","getFirestore","collection","add","author","createdAt","Date","then","catch","err","NewPostForm","handleChange","e","setState","target","value","handleSubmit","preventDefault","TextArea","Input","Option","Select","onSubmit","className","onChange","placeholder","rows","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","htmlType","customStyles","top","left","right","bottom","marginRight","transform","Modal","setAppElement","NewPostModal","isOpen","onRequestClose","closeModal","shouldCloseOnOverlayClick","close","React","Nav","openModal","showModal","bind","to","App","Boolean","window","location","hostname","match","initState","authReducer","postReducer","action","rootReducer","combineReducers","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de4a5280.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Avatar } from 'antd';\n\nclass Prompt extends Component {\n    state = {  }\n    render() {\n\n        const { Meta } = Card;\n\n        return (\n\n            <Card\n                actions={[\n                    <Icon type=\"heart\" key=\"heart\" />,\n                    <Icon type=\"book\" key=\"book\" />,\n                    <Icon type=\"user\" key=\"user\" />,\n                ]}\n            >\n                <Meta\n                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title = {this.props.title}\n                    description = {this.props.content}\n                />\n            </Card>\n\n\n            // <div>\n            //     <h1>{this.props.id}.</h1>\n            //     <h2>{this.props.title}</h2>\n            //     <h3>{this.props.content}</h3>\n            // </div>\n        );\n    }\n}\n\nexport default Prompt;","import React, { Component } from 'react';\nimport Prompt from '../Posts/Prompt'\nimport { Row, Col } from 'antd';\nimport '../../App.css'\n\nclass Feed extends Component {\n\n    getPrompts(){\n        var posts = this.props.posts\n        if(posts){\n            return(\n                posts.map((post,i) =>\n                        <Col id=\"prompt\">\n                            <Prompt \n                                key={post.id} \n                                id={post.id} \n                                title={post.title} \n                                content={post.content}\n                            />\n                        </Col> \n                )\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <h3>Popular</h3>\n                    {this.getPrompts()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        const { SubMenu } = Menu;\n        return (\n            <Menu\n                onClick={this.handleClick}\n                style={{ width: '100%', height: '100vh' }}\n                defaultSelectedKeys={['1']}\n                defaultOpenKeys={['sub1']}\n                mode=\"inline\"\n            >\n                <SubMenu\n                    key=\"sub1\"\n                    title={\n                        <span>\n                        <Icon type=\"edit\" />\n                        <span>Prompts</span>\n                        </span>\n                    }\n                >\n\n                <Menu.ItemGroup key=\"g1\" title=\"Filter\">\n                    <Menu.Item key=\"1\">Hot</Menu.Item>\n                    <Menu.Item key=\"2\">Most Liked</Menu.Item>\n                </Menu.ItemGroup>\n\n                <Menu.ItemGroup key=\"g2\" title=\"Categories\">\n                    <Menu.Item key=\"3\">Comedy</Menu.Item>\n                    <Menu.Item key=\"4\">Drama</Menu.Item>\n                    <Menu.Item key=\"5\">Romance</Menu.Item>\n                    <Menu.Item key=\"6\">Sci-Fi</Menu.Item>\n                    <Menu.Item key=\"7\">Other</Menu.Item>\n                </Menu.ItemGroup>\n\n                </SubMenu>\n\n                {/* STORIES PART OF SIDEBAR*/}\n\n                <SubMenu\n                    key=\"sub2\"\n                    title={\n                        <span>\n                        <Icon type=\"edit\" />\n                        <span>Stories</span>\n                        </span>\n                    }\n                >\n\n                <Menu.ItemGroup key=\"g3\" title=\"Filter\">\n                    <Menu.Item key=\"8\">Recently Completed</Menu.Item>\n                    <Menu.Item key=\"9\">Most Liked</Menu.Item>\n                    <Menu.Item key=\"10\">Best Rated</Menu.Item>\n                </Menu.ItemGroup>\n\n                <Menu.ItemGroup key=\"g4\" title=\"Categories\">\n                    <Menu.Item key=\"11\">Comedy</Menu.Item>\n                    <Menu.Item key=\"12\">Drama</Menu.Item>\n                    <Menu.Item key=\"13\">Romance</Menu.Item>\n                    <Menu.Item key=\"14\">Sci-Fi</Menu.Item>\n                    <Menu.Item key=\"15\">Other</Menu.Item>\n                </Menu.ItemGroup>\n\n                </SubMenu>\n\n                {/* ACCOUNT PART OF SIDEBAR */}\n\n\n                <SubMenu\n                    key=\"sub3\"\n                    title={\n                        <span>\n                        <Icon type=\"user\" />\n                        <span>Account</span>\n                        </span>\n                    }\n                >\n\n                <Menu.ItemGroup key=\"g5\" title=\"Filter\">\n                    <Menu.Item key=\"16\">Posts</Menu.Item>\n                    <Menu.Item key=\"17\">Liked</Menu.Item>\n                    <Menu.Item key=\"18\">Saved</Menu.Item>\n                    <Menu.Item key=\"19\">Profile</Menu.Item>\n                </Menu.ItemGroup>\n\n                </SubMenu>\n\n            </Menu>        \n        );\n    }\n}\n \nexport default Sidebar;","import React, { Component } from 'react';\nimport Feed from '../Layout/Feed'\nimport { connect } from 'react-redux'\nimport Sidebar from '../Layout/Sidebar'\nimport { Row, Col } from 'antd';\nimport '../../App.css'\n\nclass Home extends Component {\n    render() {\n        console.log(this.props.posts)\n        return (\n            <div id=\"home\">\n                <Row>\n                    <Col xs={12} md={4}>\n                        <Sidebar/>\n                    </Col>\n                    <Col xs={12} sm={18} offset={1}  id=\"feed-container\">\n                        <Feed posts = {this.props.posts}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.post.posts\n    }\n}\n\nexport default connect(mapStateToProps)(Home)","export const createPost = (post) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to db\n        const firestore = getFirestore()\n        console.log(post)\n        firestore.collection('posts').add({ \n            ...post,\n            author: 'sikiDamjanovic',\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_POST', post})\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createPost } from '../../Store/Actions/postActions'\nimport { Form, Icon, Input, Button,  Select } from 'antd';\n\nclass NewPostForm extends Component {\n  \n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            content: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createPost(this.state)\n    }\n\n    render() {\n\n        const { TextArea } = Input;\n        const { Option } = Select;\n\n        return (\n\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                \n                <Form.Item>\n                    <Input\n                        id=\"title\"\n                        onChange={this.handleChange} \n                        placeholder=\"Title\"\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <TextArea\n                        id=\"content\" \n                        onChange={this.handleChange}\n                        rows={5}\n                        placeholder=\"Content\"\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Category\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) =>\n                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option value=\"comedy\">Comedy</Option>\n                        <Option value=\"drama\">Drama</Option>\n                        <Option value=\"romance\">Romance</Option>\n                        <Option value=\"scifi\">Sci-Fi</Option>\n\n                    </Select>\n                </Form.Item>\n\n                <Button type=\"primary\" htmlType=\"submit\">    \n                    <Icon type=\"plus\"/>\n                    Post Prompt\n                </Button>\n\n            </Form>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (post) => dispatch(createPost(post))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(NewPostForm)","import React from 'react';\nimport Modal from 'react-modal';\nimport NewPostForm from './NewPostForm'\nimport { Icon, Button } from 'antd';\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    width                 : '50%',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root')\n\nclass NewPostModal extends React.Component {\n\n    render() {\n        return (\n            <Modal\n                isOpen={this.props.isOpen}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                shouldCloseOnOverlayClick={true}\n            >\n\n            <Button onClick={this.props.close}>X</Button>\n            <NewPostForm isOpen={this.props.isOpen}/>\n                \n            </Modal>\n    );\n  }\n}\n\nexport default NewPostModal","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Icon, Button } from 'antd'\nimport NewPostModal from '../Posts/NewPostModal';\nimport '../../App.css'\n\nclass Nav extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            openModal: false\n        };\n        this.showModal = this.showModal.bind(this);\n        this.closeModal = this.closeModal.bind(this)\n    }\n\n    showModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n\n    closeModal(){\n        this.setState({\n            openModal: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n\n                <NewPostModal isOpen={this.state.openModal} close={this.closeModal}/>\n\n                <Menu id=\"navBar\" mode=\"horizontal\" defaultSelectedKeys={['home']}>\n\n                    <Button type=\"primary\" id=\"newPrompt\" onClick={this.showModal}>\n                        <Icon type=\"plus\"/>\n                        New Prompt\n                    </Button>\n\n                    <Menu.Item key=\"home\">\n                        <Link to=\"/\">\n                            <Icon type=\"home\" />\n                            Home\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key=\"book\">\n                        <Link to=\"/saved\">\n                            <Icon type=\"book\" />\n                            Sign Out\n                        </Link>\n                    </Menu.Item>\n\n                </Menu>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Nav;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Components/Layout/Home'\nimport Nav from './Components/Layout/Nav'\nimport './App.css'\n\nconst App = () => (\n    <Router>\n        <div>\n\n            <Nav/>\n            <Home/>\n\n        </div>\n    </Router>\n)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\nconst authReducer = (state = initState, action) => {\n    return state\n}\n\nexport default authReducer","const initState = {\n    posts: [\n        {id: 1, title: 'Greek God Revenge', content: 'Youre an ancient Greek man coming home from 4 months of war to find your wife 3 months pregnant. Now youve embarked on a solemn quest: to punch Zeus in the face.'},\n        {id: 2, title: 'Where Is My Super Suit', content: 'The Suit is powerfull. A mech for some, body armor for others, always unique to each person who wore it. Those who wear it, hear the words \"not original user, booting basic mode\" As a joke, your sergeant gives you The Suit and the first thing you hear is: \"User detected: Welcome back, Commander\"'},\n        {id: 3, title: 'School Reunion', content: 'The nightmare has come true; youve woken up back in sixth grade with your memories and knowledge of everything that happened since then intact. You start staring at your classmates around you, aware of how they end up. Your teacher asks you whats wrong as you start weeping.'},\n        {id: 4, title: 'Seth The Killer', content: 'The nightmare has come true; youve woken up back in sixth grade with your memories and knowledge of everything that happened since then intact. You start staring at your classmates around you, aware of how they end up. Your teacher asks you whats wrong as you start weeping.'},\n        {id: 5, title: 'School Reunion', content: 'The nightmare has come true; youve woken up back in sixth grade with your memories and knowledge of everything that happened since then intact. You start staring at your classmates around you, aware of how they end up. Your teacher asks you whats wrong as you start weeping.'}\n    ]\n}\nconst postReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_POST':\n            console.log('created post', action.post)\n            return state\n        case 'CREATE_POST_ERR':\n            console.log('create project error', action.err)\n            return state\n        default: \n            return state\n    }\n}\n\nexport default postReducer","import authReducer from './authReducer'\nimport postReducer from './postReducer'\nimport { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    post: postReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC-1qE_pSDh3kKMmLI3fA4iErj4qGuZrgw\",\n    authDomain: \"writingrelay.firebaseapp.com\",\n    databaseURL: \"https://writingrelay.firebaseio.com\",\n    projectId: \"writingrelay\",\n    storageBucket: \"\",\n    messagingSenderId: \"549963888326\",\n    appId: \"1:549963888326:web:65281ab754acef09\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './Store/Reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './Config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig)\n    )\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}