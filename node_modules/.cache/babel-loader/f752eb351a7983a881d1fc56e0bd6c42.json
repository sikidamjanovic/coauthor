{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/coauthor/src/Components/Posts/Prompt.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Avatar, Tag, Popover } from 'antd';\nimport '../../App.css';\n\nclass Prompt extends Component {\n  getTime() {\n    var postedTime = this.props.time;\n\n    if (this.props.title == \"Testing Time\") {\n      this.differenceInHours(postedTime.toDate(), new Date());\n      return React.createElement(Tag, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"34h Left\");\n    } else {\n      return React.createElement(Tag, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"No Time\");\n    }\n  }\n\n  differenceInHours(postedTime, currentTime) {\n    console.log(postedTime + ' -- ' + currentTime);\n    console.log(Math.round(Math.abs(postedTime - currentTime) / 36e5));\n  }\n\n  render() {\n    const Meta = Card.Meta;\n    return React.createElement(Card, {\n      actions: [React.createElement(Icon, {\n        type: \"heart\",\n        key: \"heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"book\",\n        key: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"user\",\n        key: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      avatar: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: '@' + this.props.author,\n        title: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        icon: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))),\n      title: React.createElement(\"span\", {\n        id: \"title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.title), this.getTime()),\n      description: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.genre), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.content), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Prompt;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/coauthor/src/Components/Posts/Prompt.js"],"names":["React","Component","Card","Icon","Avatar","Tag","Popover","Prompt","getTime","postedTime","props","time","title","differenceInHours","toDate","Date","currentTime","console","log","Math","round","abs","render","Meta","author","genre","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Avatar, Tag, Popover } from 'antd';\nimport '../../App.css'\n\nclass Prompt extends Component {\n\n    getTime(){\n        var postedTime = this.props.time\n        if(this.props.title == \"Testing Time\"){\n            this.differenceInHours(postedTime.toDate(), new Date())\n            return <Tag color=\"blue\">34h Left</Tag>\n        }else{\n            return <Tag>No Time</Tag>\n        }\n    }\n\n    differenceInHours(postedTime, currentTime){\n        console.log(postedTime + ' -- ' + currentTime)\n        console.log(Math.round(Math.abs(postedTime - currentTime) / 36e5))\n    }\n\n    render() {\n        const { Meta } = Card;\n        return (\n            <Card\n                actions={[\n                    <Icon type=\"heart\" key=\"heart\" />,\n                    <Icon type=\"book\" key=\"book\" />,\n                    <Icon type=\"user\" key=\"user\" />,\n                ]}\n            >\n                <Meta\n                    avatar={\n                        <span>\n                            <Popover content={'@' + this.props.author} title=\"\">\n                                <Avatar icon=\"user\" />\n                            </Popover>\n                        </span>\n                    }\n                    title = {\n                        <span id=\"title-container\">\n                            <span id=\"card-title\">{this.props.title}</span>\n                            {this.getTime()}\n                        </span>\n                    }\n                    description =  { \n                        <div>\n                            <small>{ this.props.genre }</small>\n                            <br></br><br></br>\n                            <span id=\"card-content\">{ this.props.content }</span>\n                            <br></br>\n                        </div>\n                    }\n                />\n            </Card>\n\n        );\n    }\n}\n\nexport default Prompt;"]},"metadata":{},"sourceType":"module"}