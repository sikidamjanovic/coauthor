{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal Files\\\\Projects\\\\CoAuthor\\\\coauthor\\\\src\\\\Components\\\\Posts\\\\NewPostModal.js\";\nimport React from 'react';\nimport { Button, Modal, Icon, Form, Input, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../Store/Actions/postActions';\n\nclass NewPostModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        genre: e\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.createPost(this.state);\n      this.handleCancel();\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      genre: '',\n      visible: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  showModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  handleCancel() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    const auth = this.props.auth; //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\n\n    const TextArea = Input.TextArea;\n    const Option = Select.Option;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"New Prompt\"), React.createElement(Modal, {\n      title: \"New Prompt\",\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"title\",\n      onChange: this.handleChange,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      id: \"content\",\n      onChange: this.handleChange,\n      rows: 5,\n      placeholder: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Category\",\n      onChange: this.handleSelectChange,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Comedy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Comedy\"), React.createElement(Option, {\n      value: \"Drama\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Drama\"), React.createElement(Option, {\n      value: \"Romance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Romance\"), React.createElement(Option, {\n      value: \"SciFi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Sci-Fi\"))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \"Post Prompt\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: post => dispatch(createPost(post))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostModal);","map":{"version":3,"sources":["E:\\Personal Files\\Projects\\CoAuthor\\coauthor\\src\\Components\\Posts\\NewPostModal.js"],"names":["React","Button","Modal","Icon","Form","Input","Select","connect","createPost","NewPostModal","Component","constructor","props","handleChange","e","setState","target","id","value","handleSelectChange","genre","handleSubmit","preventDefault","console","log","state","handleCancel","title","content","visible","bind","showModal","render","auth","TextArea","Option","width","input","option","children","toLowerCase","indexOf","mapStateToProps","firebase","mapDispatchToProps","dispatch","post"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, Icon, Form, Input, Select } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../../Store/Actions/postActions'\r\n\r\nclass NewPostModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            genre: '',\r\n            visible: false\r\n        }\r\n        this.handleCancel = this.handleCancel.bind(this)\r\n        this.showModal = this.showModal.bind(this)\r\n    }\r\n\r\n    showModal(){\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    handleCancel(){\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            genre: e\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.createPost(this.state)\r\n        this.handleCancel()\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\r\n        const { TextArea } = Input;\r\n        const { Option } = Select;\r\n        return (\r\n            <div>\r\n                <Button \r\n                    onClick={this.showModal}\r\n                    type=\"primary\"\r\n                >\r\n                    <Icon type=\"plus\"/>    \r\n                    New Prompt\r\n                </Button>\r\n                <Modal\r\n                    title=\"New Prompt\"\r\n                    visible={this.state.visible}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                >\r\n\r\n                {/* **** MODAL DETAILS (FORM) ****/}\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            <Input\r\n                                id=\"title\"\r\n                                onChange={this.handleChange} \r\n                                placeholder=\"Title\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <TextArea\r\n                                id=\"content\" \r\n                                onChange={this.handleChange}\r\n                                rows={5}\r\n                                placeholder=\"Content\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: 200 }}\r\n                                placeholder=\"Category\"\r\n                                onChange={this.handleSelectChange}\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"Comedy\">Comedy</Option>\r\n                                <Option value=\"Drama\">Drama</Option>\r\n                                <Option value=\"Romance\">Romance</Option>\r\n                                <Option value=\"SciFi\">Sci-Fi</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">    \r\n                            <Icon type=\"plus\"/>\r\n                            Post Prompt\r\n                        </Button>\r\n                    </Form>\r\n                \r\n                </Modal>\r\n\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostModal)"]},"metadata":{},"sourceType":"module"}