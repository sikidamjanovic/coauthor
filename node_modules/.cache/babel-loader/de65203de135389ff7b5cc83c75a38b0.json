{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal Files\\\\Projects\\\\CoAuthor\\\\coauthor\\\\src\\\\Components\\\\Posts\\\\NewPostForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../Store/Actions/postActions';\nimport { Form, Icon, Input, Button, Select } from 'antd';\nimport { redirect } from 'react-router-dom';\n\nclass NewPostForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        genre: e\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.createPost(this.state);\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      genre: ''\n    };\n  }\n\n  render() {\n    const auth = this.props.auth; //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\n\n    const TextArea = Input.TextArea;\n    const Option = Select.Option;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"title\",\n      onChange: this.handleChange,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      id: \"content\",\n      onChange: this.handleChange,\n      rows: 5,\n      placeholder: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Category\",\n      onChange: this.handleSelectChange,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Comedy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Comedy\"), React.createElement(Option, {\n      value: \"Drama\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Drama\"), React.createElement(Option, {\n      value: \"Romance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Romance\"), React.createElement(Option, {\n      value: \"Scifi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sci-Fi\"))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"Post Prompt\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: post => dispatch(createPost(post))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm);","map":{"version":3,"sources":["E:\\Personal Files\\Projects\\CoAuthor\\coauthor\\src\\Components\\Posts\\NewPostForm.js"],"names":["React","Component","connect","createPost","Form","Icon","Input","Button","Select","redirect","NewPostForm","constructor","handleChange","e","setState","target","id","value","handleSelectChange","genre","handleSubmit","preventDefault","console","log","state","props","title","content","render","auth","TextArea","Option","width","input","option","children","toLowerCase","indexOf","mapStateToProps","firebase","mapDispatchToProps","dispatch","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAqCC,MAArC,QAAmD,MAAnD;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAEhCU,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,YATc,GASEC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGH,KAba;;AAAA,SAedC,kBAfc,GAeQL,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVK,QAAAA,KAAK,EAAEN;AADG,OAAd;AAGH,KAnBa;;AAAA,SAqBdO,YArBc,GAqBEP,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACQ,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKC,KAAL,CAAWtB,UAAX,CAAsB,KAAKqB,KAA3B;AACH,KAzBa;;AAEV,SAAKA,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTR,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAoBDS,EAAAA,MAAM,GAAG;AAAA,UACGC,IADH,GACY,KAAKJ,KADjB,CACGI,IADH,EAEL;;AAFK,UAGGC,QAHH,GAGgBxB,KAHhB,CAGGwB,QAHH;AAAA,UAIGC,MAJH,GAIcvB,MAJd,CAIGuB,MAJH;AAML,WAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKX,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,QAAQ,EAAE,KAAKR,YAFnB;AAGI,MAAA,WAAW,EAAC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAUI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,QAAQ,EAAE,KAAKA,YAFnB;AAGI,MAAA,IAAI,EAAE,CAHV;AAII,MAAA,WAAW,EAAC,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAmBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,UAAU,MADd;AAEI,MAAA,KAAK,EAAE;AAAEoB,QAAAA,KAAK,EAAE;AAAT,OAFX;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,QAAQ,EAAE,KAAKd,kBAJnB;AAKI,MAAA,gBAAgB,EAAC,UALrB;AAMI,MAAA,YAAY,EAAE,CAACe,KAAD,EAAQC,MAAR,KACVA,MAAM,CAACT,KAAP,CAAaU,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CJ,KAAK,CAACG,WAAN,EAA5C,KAAoE,CAP5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,EAYI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,EAaI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CADJ,CAnBJ,EAsCI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAtCJ,CAFJ;AA+CL;;AAlFiC;;AAqFpC,MAAME,eAAe,GAAId,KAAD,IAAW;AAC/B,SAAO;AACHK,IAAAA,IAAI,EAAEL,KAAK,CAACe,QAAN,CAAeV;AADlB,GAAP;AAGH,CAJD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtC,IAAAA,UAAU,EAAGuC,IAAD,IAAUD,QAAQ,CAACtC,UAAU,CAACuC,IAAD,CAAX;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAexC,OAAO,CAACoC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9B,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../../Store/Actions/postActions'\r\nimport { Form, Icon, Input, Button,  Select } from 'antd';\r\nimport { redirect } from 'react-router-dom'\r\n\r\nclass NewPostForm extends Component {\r\n  \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            genre: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            genre: e\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.createPost(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\r\n        const { TextArea } = Input;\r\n        const { Option } = Select;\r\n\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                \r\n                <Form.Item>\r\n                    <Input\r\n                        id=\"title\"\r\n                        onChange={this.handleChange} \r\n                        placeholder=\"Title\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <TextArea\r\n                        id=\"content\" \r\n                        onChange={this.handleChange}\r\n                        rows={5}\r\n                        placeholder=\"Content\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Category\"\r\n                        onChange={this.handleSelectChange}\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        <Option value=\"Comedy\">Comedy</Option>\r\n                        <Option value=\"Drama\">Drama</Option>\r\n                        <Option value=\"Romance\">Romance</Option>\r\n                        <Option value=\"Scifi\">Sci-Fi</Option>\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Button type=\"primary\" htmlType=\"submit\">    \r\n                    <Icon type=\"plus\"/>\r\n                    Post Prompt\r\n                </Button>\r\n\r\n            </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)"]},"metadata":{},"sourceType":"module"}