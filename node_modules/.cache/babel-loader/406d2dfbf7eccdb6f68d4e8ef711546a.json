{"ast":null,"code":"import _defineProperty from \"E:\\\\Personal Files\\\\Projects\\\\CoAuthor\\\\coauthor\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getFirestore } from \"redux-firestore\";\nimport { firestore } from \"firebase\";\nexport const createPost = post => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to db\n    const firestore = getFirestore();\n    console.log(post);\n    firestore.collection('posts').add(_objectSpread({}, post, {\n      author: 'sikiDamjanovic',\n      createdAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_POST',\n        post\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:\\Personal Files\\Projects\\CoAuthor\\coauthor\\src\\Store\\Actions\\postActions.js"],"names":["getFirestore","firestore","createPost","post","dispatch","getState","getFirebase","console","log","collection","add","author","createdAt","Date","then","type","catch","err"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAGA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeN,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAF,IAAAA,SAAS,CAACQ,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,mBACOP,IADP;AAEIQ,MAAAA,MAAM,EAAE,gBAFZ;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,QAIGC,IAJH,CAIQ,MAAM;AACVV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,aAAR;AAAuBZ,QAAAA;AAAvB,OAAD,CAAR;AACH,KAND,EAMGa,KANH,CAMUC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KARD;AASH,GAbD;AAcH,CAfM","sourcesContent":["import { getFirestore } from \"redux-firestore\";\r\nimport { firestore } from \"firebase\";\r\n\r\n\r\nexport const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to db\r\n        const firestore = getFirestore()\r\n        console.log(post)\r\n        firestore.collection('posts').add({ \r\n            ...post,\r\n            author: 'sikiDamjanovic',\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}