{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/coauthor/src/Components/Posts/NewPostModal.js\";\nimport React from 'react';\nimport { Button, Modal, Icon, Form, Input, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../Store/Actions/postActions';\n\nclass NewPostModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        genre: e\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.createPost(this.state);\n      this.closeModal();\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      genre: '',\n      visible: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  showModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  handleCancel() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    const auth = this.props.auth; //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\n\n    const TextArea = Input.TextArea;\n    const Option = Select.Option;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"New Prompt\"), React.createElement(Modal, {\n      title: \"New Prompt\",\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"title\",\n      onChange: this.handleChange,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      id: \"content\",\n      onChange: this.handleChange,\n      rows: 5,\n      placeholder: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Category\",\n      onChange: this.handleSelectChange,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Comedy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Comedy\"), React.createElement(Option, {\n      value: \"Drama\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Drama\"), React.createElement(Option, {\n      value: \"Romance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Romance\"), React.createElement(Option, {\n      value: \"Scifi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Sci-Fi\"))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"Post Prompt\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: post => dispatch(createPost(post))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostModal);","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/coauthor/src/Components/Posts/NewPostModal.js"],"names":["React","Button","Modal","Icon","Form","Input","Select","connect","createPost","NewPostModal","Component","constructor","props","handleChange","e","setState","target","id","value","handleSelectChange","genre","handleSubmit","preventDefault","console","log","state","closeModal","title","content","visible","handleCancel","bind","showModal","render","auth","TextArea","Option","width","input","option","children","toLowerCase","indexOf","mapStateToProps","firebase","mapDispatchToProps","dispatch","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,MAA3C,QAAyD,MAAzD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAwBlBC,YAxBkB,GAwBFC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGH,KA5BiB;;AAAA,SA8BlBC,kBA9BkB,GA8BIL,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVK,QAAAA,KAAK,EAAEN;AADG,OAAd;AAGH,KAlCiB;;AAAA,SAoClBO,YApCkB,GAoCFP,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACQ,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKb,KAAL,CAAWJ,UAAX,CAAsB,KAAKiB,KAA3B;AACA,WAAKC,UAAL;AACH,KAzCiB;;AAEd,SAAKD,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTR,MAAAA,KAAK,EAAE,EAHE;AAITS,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDC,EAAAA,SAAS,GAAE;AACP,SAAKjB,QAAL,CAAc;AACVc,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH;;AAEDC,EAAAA,YAAY,GAAE;AACV,SAAKf,QAAL,CAAc;AACVc,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH;;AAqBDI,EAAAA,MAAM,GAAG;AAAA,UACGC,IADH,GACY,KAAKtB,KADjB,CACGsB,IADH,EAEL;;AAFK,UAGGC,QAHH,GAGgB9B,KAHhB,CAGG8B,QAHH;AAAA,UAIGC,MAJH,GAIc9B,MAJd,CAIG8B,MAJH;AAKL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,KAAKJ,SADlB;AAEI,MAAA,IAAI,EAAC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eADJ,EAQI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWI,OAFxB;AAGI,MAAA,QAAQ,EAAE,KAAKC,YAHnB;AAII,MAAA,MAAM,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,QAAQ,EAAE,KAAKR,YAFnB;AAGI,MAAA,WAAW,EAAC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAUI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,QAAQ,EAAE,KAAKA,YAFnB;AAGI,MAAA,IAAI,EAAE,CAHV;AAII,MAAA,WAAW,EAAC,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAmBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,UAAU,MADd;AAEI,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAFX;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,QAAQ,EAAE,KAAKlB,kBAJnB;AAKI,MAAA,gBAAgB,EAAC,UALrB;AAMI,MAAA,YAAY,EAAE,CAACmB,KAAD,EAAQC,MAAR,KACVA,MAAM,CAAC3B,KAAP,CAAa4B,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CJ,KAAK,CAACG,WAAN,EAA5C,KAAoE,CAP5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,EAYI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,EAaI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CADJ,CAnBJ,EAsCI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAtCJ,CAPJ,CARJ,CADJ;AAiEL;;AAnHwC;;AAsH3C,MAAME,eAAe,GAAIlB,KAAD,IAAW;AAC/B,SAAO;AACHS,IAAAA,IAAI,EAAET,KAAK,CAACmB,QAAN,CAAeV;AADlB,GAAP;AAGH,CAJD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtC,IAAAA,UAAU,EAAGuC,IAAD,IAAUD,QAAQ,CAACtC,UAAU,CAACuC,IAAD,CAAX;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAexC,OAAO,CAACoC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpC,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Button, Modal, Icon, Form, Input, Select } from 'antd';\nimport { connect } from 'react-redux'\nimport { createPost } from '../../Store/Actions/postActions'\n\nclass NewPostModal extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            title: '',\n            content: '',\n            genre: '',\n            visible: false\n        }\n        this.handleCancel = this.handleCancel.bind(this)\n        this.showModal = this.showModal.bind(this)\n    }\n\n    showModal(){\n        this.setState({\n            visible: true\n        })\n    }\n\n    handleCancel(){\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            genre: e\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createPost(this.state)\n        this.closeModal()\n    }\n\n    render() {\n        const { auth } = this.props;\n        //if (!auth.uid) return <redirect to= '/signin'/> //Use for actions that the user cant complete unless they are signed in\n        const { TextArea } = Input;\n        const { Option } = Select;\n        return (\n            <div>\n                <Button \n                    onClick={this.showModal}\n                    type=\"primary\"\n                >\n                    <Icon type=\"plus\"/>    \n                    New Prompt\n                </Button>\n                <Modal\n                    title=\"New Prompt\"\n                    visible={this.state.visible}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                \n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        \n                        <Form.Item>\n                            <Input\n                                id=\"title\"\n                                onChange={this.handleChange} \n                                placeholder=\"Title\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <TextArea\n                                id=\"content\" \n                                onChange={this.handleChange}\n                                rows={5}\n                                placeholder=\"Content\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Select\n                                showSearch\n                                style={{ width: 200 }}\n                                placeholder=\"Category\"\n                                onChange={this.handleSelectChange}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                <Option value=\"Comedy\">Comedy</Option>\n                                <Option value=\"Drama\">Drama</Option>\n                                <Option value=\"Romance\">Romance</Option>\n                                <Option value=\"Scifi\">Sci-Fi</Option>\n\n                            </Select>\n                        </Form.Item>\n\n                        <Button type=\"primary\" htmlType=\"submit\">    \n                            <Icon type=\"plus\"/>\n                            Post Prompt\n                        </Button>\n\n                    </Form>\n                \n                </Modal>\n\n            </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (post) => dispatch(createPost(post))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostModal)"]},"metadata":{},"sourceType":"module"}