{"ast":null,"code":"import _defineProperty from \"E:\\\\Personal Files\\\\Projects\\\\CoAuthor\\\\coauthor\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getFirestore } from \"redux-firestore\";\nimport { firestore } from \"firebase\";\nimport { notification } from 'antd';\nexport const createPost = post => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to db\n    const firestore = getFirestore();\n    console.log(post);\n    var today = new Date();\n    firestore.collection('posts').add(_objectSpread({}, post, {\n      author: getFirebase().auth().currentUser.displayName,\n      createdAt: new Date(),\n      time: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' - ' + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n    })).then(() => {\n      firestore.collection('posts').doc('46BDxawwMokGJRsVvQu4').collection('likes').doc(getFirebase().auth().currentUser.displayName).set({\n        uid: getFirebase().auth().currentUser.uid\n      });\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_POST',\n        post\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n    notification.open({\n      message: 'Prompt Posted!',\n      description: 'I bet its really great man...',\n      duration: 2\n    });\n  };\n};","map":{"version":3,"sources":["E:\\Personal Files\\Projects\\CoAuthor\\coauthor\\src\\Store\\Actions\\postActions.js"],"names":["getFirestore","firestore","notification","createPost","post","dispatch","getState","getFirebase","console","log","today","Date","collection","add","author","auth","currentUser","displayName","createdAt","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","then","doc","set","uid","type","catch","err","open","message","description","duration"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeP,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,QAAIM,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAEAV,IAAAA,SAAS,CAACW,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,mBACOT,IADP;AAEIU,MAAAA,MAAM,EAAEP,WAAW,GAAGQ,IAAd,GAAqBC,WAArB,CAAiCC,WAF7C;AAGIC,MAAAA,SAAS,EAAE,IAAIP,IAAJ,EAHf;AAIIQ,MAAAA,IAAI,EAAET,KAAK,CAACU,WAAN,KAAoB,GAApB,IAAyBV,KAAK,CAACW,QAAN,KAAiB,CAA1C,IAA6C,GAA7C,GAAiDX,KAAK,CAACY,OAAN,EAAjD,GAAiE,KAAjE,GAAuEZ,KAAK,CAACa,QAAN,EAAvE,GAA0F,GAA1F,GAAgGb,KAAK,CAACc,UAAN,EAAhG,GAAqH,GAArH,GAA2Hd,KAAK,CAACe,UAAN;AAJrI,QAKGC,IALH,CAKQ,MAAM;AACVzB,MAAAA,SAAS,CAACW,UAAV,CAAqB,OAArB,EAA8Be,GAA9B,CAAkC,sBAAlC,EAA0Df,UAA1D,CAAqE,OAArE,EAA8Ee,GAA9E,CAAkFpB,WAAW,GAAGQ,IAAd,GAAqBC,WAArB,CAAiCC,WAAnH,EAAgIW,GAAhI,CAAoI;AAChIC,QAAAA,GAAG,EAAEtB,WAAW,GAAGQ,IAAd,GAAqBC,WAArB,CAAiCa;AAD0F,OAApI;AAGH,KATD,EASGH,IATH,CASQ,MAAM;AACVrB,MAAAA,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAE,aAAR;AAAuB1B,QAAAA;AAAvB,OAAD,CAAR;AACH,KAXD,EAWG2B,KAXH,CAWUC,GAAD,IAAS;AACd3B,MAAAA,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KAbD;AAcA9B,IAAAA,YAAY,CAAC+B,IAAb,CAAkB;AACdC,MAAAA,OAAO,EAAE,gBADK;AAEdC,MAAAA,WAAW,EAAE,+BAFC;AAGdC,MAAAA,QAAQ,EAAE;AAHI,KAAlB;AAKH,GAzBD;AA0BH,CA3BM","sourcesContent":["import { getFirestore } from \"redux-firestore\";\r\nimport { firestore } from \"firebase\";\r\nimport { notification } from 'antd'\r\n\r\nexport const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to db\r\n        const firestore = getFirestore()\r\n        console.log(post)\r\n        var today = new Date();\r\n\r\n        firestore.collection('posts').add({ \r\n            ...post,\r\n            author: getFirebase().auth().currentUser.displayName,\r\n            createdAt: new Date(),\r\n            time: today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+' - '+today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds(),\r\n        }).then(() => {\r\n            firestore.collection('posts').doc('46BDxawwMokGJRsVvQu4').collection('likes').doc(getFirebase().auth().currentUser.displayName).set({\r\n                uid: getFirebase().auth().currentUser.uid\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n        notification.open({\r\n            message: 'Prompt Posted!',\r\n            description: 'I bet its really great man...',\r\n            duration: 2\r\n        })\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}