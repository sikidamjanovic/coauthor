{"ast":null,"code":"import { firestore } from \"firebase\";\nimport { responsiveArray } from \"antd/lib/_util/responsiveObserve\";\nimport { getFirestore } from \"redux-firestore\";\nimport { relativeTimeRounding } from \"moment\";\nexport const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    let pastUsers = firestore.collection('users').get();\n    console.log(pastUsers);\n    console.log('test');\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      firebase.auth().currentUser.updateProfile({\n        displayName: newUser.username\n      });\n      return firestore.collection('users').doc(newUser.username).set({\n        uid: resp.user.uid\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:\\Personal Files\\Projects\\CoAuthor\\coauthor\\src\\Store\\Actions\\authActions.js"],"names":["firestore","responsiveArray","getFirestore","relativeTimeRounding","signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","pastUsers","collection","get","console","log","createUserWithEmailAndPassword","resp","currentUser","updateProfile","displayName","username","doc","set","uid","user"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,oBAAT,QAAqC,QAArC;AAEA,OAAO,MAAMC,MAAM,GAAIC,WAAD,IAAiB;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAuC;AAC1C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACIN,WAAW,CAACO,KADhB,EAEIP,WAAW,CAACQ,QAFhB,EAGEC,IAHF,CAGO,MAAM;AACTR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KALD,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA;AAAvB,OAAD,CAAR;AACH,KAPD;AAQH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO,CAACZ,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAuC;AAC1C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBQ,OAAhB,GAA0BJ,IAA1B,CAA+B,MAAM;AACjCR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAFD;AAGH,GAND;AAOH,CARM;AAUP,OAAO,MAAMI,MAAM,GAAIC,OAAD,IAAa;AAC/B,SAAO,CAACd,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAuC;AAC1C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACA,UAAMR,SAAS,GAAGE,YAAY,EAA9B;AAEA,QAAImB,SAAS,GAAGrB,SAAS,CAACsB,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAKAhB,IAAAA,QAAQ,CAACC,IAAT,GAAgBgB,8BAAhB,CACIN,OAAO,CAACR,KADZ,EAEIQ,OAAO,CAACP,QAFZ,EAGEC,IAHF,CAGQa,IAAD,IAAU;AACblB,MAAAA,QAAQ,CAACC,IAAT,GAAgBkB,WAAhB,CAA4BC,aAA5B,CAA0C;AAC1CC,QAAAA,WAAW,EAAEV,OAAO,CAACW;AADqB,OAA1C;AAGA,aAAO/B,SAAS,CAACsB,UAAV,CAAqB,OAArB,EAA8BU,GAA9B,CAAkCZ,OAAO,CAACW,QAA1C,EAAoDE,GAApD,CAAwD;AAC3DC,QAAAA,GAAG,EAAEP,IAAI,CAACQ,IAAL,CAAUD;AAD4C,OAAxD,CAAP;AAGH,KAVD,EAUGpB,IAVH,CAUQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AAEH,KAbD,EAaGC,KAbH,CAaSC,GAAG,IAAI;AACZX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA;AAAxB,OAAD,CAAR;AACH,KAfD;AAiBH,GA5BD;AA6BH,CA9BM","sourcesContent":["import { firestore } from \"firebase\";\r\nimport { responsiveArray } from \"antd/lib/_util/responsiveObserve\";\r\nimport { getFirestore } from \"redux-firestore\";\r\nimport { relativeTimeRounding } from \"moment\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n} \r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        \r\n        let pastUsers = firestore.collection('users').get();\r\n        console.log(pastUsers)\r\n        console.log('test')\r\n\r\n       \r\n \r\n      \r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password,\r\n        ).then((resp) => {\r\n            firebase.auth().currentUser.updateProfile({\r\n            displayName: newUser.username,\r\n            });\r\n            return firestore.collection('users').doc(newUser.username).set({\r\n                uid: resp.user.uid\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n            \r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}